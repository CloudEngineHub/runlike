on:
  release:
    types: [published]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - run: pip install poetry
      - run: poetry install
      
      # Check if version already exists on PyPI
      - name: Check if version exists on PyPI
        id: version_check
        run: |
          VERSION=$(poetry run ./current_version.py)
          echo "Current version: $VERSION"
          
          # Check if version already exists on PyPI
          if pip index versions runlike | grep -q "$VERSION"; then
            echo "Version $VERSION already exists on PyPI, skipping release"
            echo "skip_release=true" >> $GITHUB_OUTPUT
          else
            echo "Version $VERSION is new, proceeding with release"
            echo "skip_release=false" >> $GITHUB_OUTPUT
          fi
      
      # Only run the release steps if the version doesn't exist on PyPI
      - name: Publish to PyPI
        if: steps.version_check.outputs.skip_release != 'true'
        run: make pypi
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
          
      - name: Wait for PyPI
        if: steps.version_check.outputs.skip_release != 'true'
        run: bin/wait_for_pip.sh $(poetry run ./current_version.py)
        
      - name: Log into Dockerhub
        if: steps.version_check.outputs.skip_release != 'true'
        uses: docker/login-action@v3
        with:
          username: assaflavie
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Push Docker image
        if: steps.version_check.outputs.skip_release != 'true'
        run: make push
