name: Create Release

on:
  push:
    branches: ["master"]

jobs:
  release:
    runs-on: ubuntu-latest
    # Only run this job if we're not already creating a release
    if: "!contains(github.event.head_commit.message, 'chore(release):')"
    permissions:
      contents: write  # Needed for creating tags and releases
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}  # Using built-in token with explicitly granted permissions
          
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: 'x64'
          
      - name: Install Poetry and dependencies
        run: |
          pip install poetry
          poetry install
          
      - name: Get Version
        id: get_version
        run: |
          VERSION=$(poetry run ./current_version.py)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Check if tag exists
        id: check_tag
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          if git tag -l | grep -q "v$VERSION"; then
            echo "Tag v$VERSION already exists, skipping tag creation"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag v$VERSION does not exist, will create it"
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Create Tag
        if: steps.check_tag.outputs.tag_exists != 'true'
        run: |
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
